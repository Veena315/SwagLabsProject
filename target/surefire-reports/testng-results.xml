<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="18009" started-at="2023-04-24T14:05:02Z" finished-at="2023-04-24T14:05:20Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="18009" started-at="2023-04-24T14:05:02Z" finished-at="2023-04-24T14:05:20Z">
      <class name="testCases.LoginTest">
        <test-method status="PASS" signature="ReportSetup()[pri:0, instance:testCases.LoginTest@23529fee]" name="ReportSetup" is-config="true" duration-ms="989" started-at="2023-04-24T14:05:02Z" finished-at="2023-04-24T14:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportSetup -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testCases.LoginTest@23529fee]" name="SetUp" is-config="true" duration-ms="6655" started-at="2023-04-24T14:05:03Z" finished-at="2023-04-24T14:05:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.LoginTest.InvalidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="InvalidLogin(java.lang.reflect.Method)[pri:0, instance:testCases.LoginTest@23529fee]" name="InvalidLogin" duration-ms="766" started-at="2023-04-24T14:05:10Z" finished-at="2023-04-24T14:05:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.LoginTest.InvalidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidLogin -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testCases.LoginTest@23529fee]" name="TearDown" is-config="true" duration-ms="780" started-at="2023-04-24T14:05:11Z" finished-at="2023-04-24T14:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testCases.LoginTest@23529fee]" name="SetUp" is-config="true" duration-ms="5867" started-at="2023-04-24T14:05:12Z" finished-at="2023-04-24T14:05:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.LoginTest.ValidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="ValidLogin(java.lang.reflect.Method)[pri:0, instance:testCases.LoginTest@23529fee]" name="ValidLogin" duration-ms="1561" started-at="2023-04-24T14:05:17Z" finished-at="2023-04-24T14:05:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.LoginTest.ValidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidLogin -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testCases.LoginTest@23529fee]" name="TearDown" is-config="true" duration-ms="812" started-at="2023-04-24T14:05:19Z" finished-at="2023-04-24T14:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="ReportClean()[pri:0, instance:testCases.LoginTest@23529fee]" name="ReportClean" is-config="true" duration-ms="546" started-at="2023-04-24T14:05:20Z" finished-at="2023-04-24T14:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportClean -->
      </class> <!-- testCases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
